盒子模型

CSS中有一种基础设计模式叫盒模型，盒模型定义了Web页面中的元素中如何来解析。CSS中每一个元素都是一个盒模型，包括html和body标签元素。在盒模型中主要包括width、height、border、background、padding和margin这些属性，而且他们之间的层次关系可以相互影响，来看一张盒模型的3D展示图：


box-sizing：

在CSS中盒模型被分为两种，

第一种是w3c的标准模型，
另一种是IE的传统模型，它们相同之处都是对元素计算尺寸的模型，
具体说不是对元素的width、height、padding和border以及元素实际尺寸的计算关系，
它们不同之处是两者的计算方法不一致，

的主要是外盒模型和内盒模型，如下面计算公式所示：

1. W3C标准盒模型
外盒尺寸计算（元素空间尺寸）

	element空间高度＝内容高度＋内距＋边框＋外距

	element空间宽度＝内容宽度＋内距＋边框＋外距

内盒尺寸计算（元素大小）

	element高度＝内容高度＋内距＋边框（height为内容高度）

	element宽度＝内容宽度＋内距＋边框（width为内容宽度）

2.IE传统下盒模型（IE6以下，不包含IE6版本或”QuirksMode下IE5.5+”）

外盒尺寸计算（元素空间尺寸）

	element空间高度＝内容高度＋外距（height包含了元素内容宽度、边框、内距）

	element宽间宽度＝内容宽度＋外距（width包含了元素内容宽度、边框、内距）

内盒尺寸计算（元素大小）

	element高度＝内容高度（height包含了元素内容宽度、边框、内距）

	element宽度＝内容宽度（width包含了元素内容宽度、边框、内距）

二、在CSS3中新增加了box-sizing属性，能够事先定义盒模型的尺寸解析方式，其语法规则如下：

		box-sizing: content-box | border-box | inherit


属性值说明

content-box

默认值，其让元素维持W3C的标准盒模型，也就是说元素的宽度和高度（width/height）等于元素边框宽度（border）加上元素内距（padding）加上元素内容宽度或高度（content width/ height），也就是element width/height = border + padding + content width / height

border-box

重新定义CSS2.1中盒模型组成的模式，让元素维持IE传统的盒模型（IE6以下版本和IE6-7怪异模式），也就是说元素的宽度或高度等于元素内容的宽度或高度。从上面盒模型介绍可知，这里的内容宽度或高度包含了元素的border、padding、内容的宽度或高度（此处的内容宽度或高度＝盒子的宽度或高度—边框—内距）。

inherit

使元素继承父元素的盒模型模式

其中最为关键的是box-sizing中content-box和border-box两者的区别，他们之间的区别可以通过下图来展示，其对盒模型的不同解析：






在自适应布局当中，在元素基础上添加内距padding，按照标准盒模型解析，往往会将布局撑破，但使用box-sizing的border-box值，可以让你轻松完成。

